{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "#root",
  "properties": {
    "color": {
      "$id": "#UtilColor",
      "description": "main color of the button: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205",
      "type": "string"
    },
    "common": {
      "$id": "#UtilCommon",
      "properties": {
        "width": {
          "description": "width of the widget. Can be either a number or a percentage.\nExample: 15",
          "$ref": "#UtilNumOrPercentage"
        },
        "height": {
          "description": "height of the widget. Can be either a number or a percentage.\nExample: \"25%\"",
          "$ref": "#UtilNumOrPercentage"
        },
        "transition_duration": {
          "$id": "#UtilCommon/transition_duration",
          "description": "widget show/hide in `transition_duration` ms.\n Default 100ms",
          "type": "integer",
          "minimum": 0
        },
        "frame_rate": {
          "$id": "#UtilCommon/frame_rate",
          "description": "widget frame rate.\nDefault 30",
          "type": "integer",
          "minimum": 1
        },
        "extra_trigger_size": {
          "$id": "#UtilCommon/extra_trigger_size",
          "description": "transparent extra trigger area, must > 0 or else the widget will not be triggered.\nDefault 5",
          "$ref": "#UtilNumOrPercentage"
        }
      }
    },
    "numOrPercentage": {
      "$id": "#UtilNumOrPercentage",
      "anyOf": [{ "type": "number", "minimum": 0 }, { "type": "string" }]
    },
    "eventMap": {
      "$id": "#UtilEventMap",
      "description": "array of tuples(int, string), int refers for the mouse button id.\n if you don't know what id your extra mouse button is, please run with `way-edges [group_name] --mouse-debug`: example [[1, \"kitty #open up kitty console\"],]",
      "type": "array",
      "items": {
        "type": "array",
        "prefixItems": [
          { "type": "integer", "minimum": 1 },
          { "type": "string" }
        ]
      }
    },
    "pulseAudio": {
      "$id": "#UtilPulseAudio",
      "properties": {
        "redraw_only_on_pa_change": {
          "description": "redraw only on pulseaudio sink or source info change",
          "type": "boolean"
        },
        "mute_color": {
          "$ref": "#UtilColor",
          "default": "#000000"
        },
        "device": {
          "type": "string",
          "description": "Can empty(default sink or source), just don't include this key. Device description for sink or source. you can find it with `pamixer --list-sinks/--list-sources` at the end of each line"
        }
      }
    },

    "widgets": {
      "$id": "#AllWidgets",
      "description": "All widgets in the config file",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "btn",
            "slide",
            "speaker",
            "microphone",
            "backlight",
            "box",
            "text",
            "ring",
            "hyprland-workspace"
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "btn"
              }
            }
          },
          "then": {
            "$ref": "#Btn"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "slide"
              }
            }
          },
          "then": {
            "$ref": "#Slider"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "speaker"
              }
            }
          },
          "then": {
            "$ref": "#Speaker"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "microphone"
              }
            }
          },
          "then": {
            "$ref": "#Microphone"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "backlight"
              }
            }
          },
          "then": {
            "$ref": "#Backlight"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "box"
              }
            }
          },
          "then": {
            "$ref": "#Box"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "text"
              }
            }
          },
          "then": {
            "$ref": "#Text"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ring"
              }
            }
          },
          "then": {
            "$ref": "#Ring"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "hyprland-workspace"
              }
            }
          },
          "then": {
            "$ref": "#HyprlandWorkspace"
          }
        }
      ]
    },

    "BtnWidget": {
      "$id": "#Btn",
      "description": "Button widget specific properties",
      "allOf": [
        {
          "properties": {
            "color": {
              "$ref": "#UtilColor",
              "default": "#7B98FF"
            },
            "event_map": {
              "$ref": "#UtilEventMap"
            }
          }
        },
        {
          "$ref": "#UtilCommon"
        }
      ]
    },
    "BaseSlideWidget": {
      "$id": "#BaseSlideWidget",
      "properties": {
        "bg_color": {
          "$ref": "#UtilColor",
          "default": "#808080"
        },
        "fg_color": {
          "$ref": "#UtilColor",
          "default": "#FFB847"
        },
        "border_color": {
          "$ref": "#UtilColor",
          "default": "#646464"
        },
        "text_color": {
          "$ref": "#UtilColor",
          "default": "#000000"
        },
        "preview_size": {
          "description": "how much area should the widget reveal when hidden\nDefault 3",
          "type": "number"
        },
        "progress_direction": {
          "description": "progress bar left/down -> right/up : Forward/Backward\nDefault Forward",
          "type": "string",
          "enum": ["Forward", "Backward"]
        },
        "on_change": {
          "description": "command to execute, replace '{progress}' with the progress from 0-1",
          "type": "string"
        },
        "is_text_position_start": {
          "description": "which side percentage info at, start or end of the widget\nDefault true",
          "type": "boolean"
        },
        "event_map": {
          "$ref": "#UtilEventMap"
        },
        "obtuse_angle": {
          "description": "The 2 obtuse angle in trapezoid, set it within 90-180",
          "type": "number",
          "default": 120
        },
        "radius": {
          "description": "Radius of the rounded corners for 2 obtuse angle in trapezoid, default 20",
          "type": "number",
          "default": 20
        },
        "draggable": {
          "description": "Is progress changable by dragging and clicking\nDefault true",
          "type": "boolean",
          "default": true
        },
        "update_with_interval_ms": {
          "description": "update progress with command given milliseconds, Please be noted that the return value of the command must be between 0 and 1.\nExample: [1000, \"echo 0.2333\"]",
          "type": "array",
          "prefixItems": [
            { "type": "integer", "minimum": 1 },
            { "type": "string" }
          ]
        }
      },
      "additionalProperties": {
        "$ref": "#UtilCommon",
        "required": ["width", "height"]
      }
    },
    "SlideWidget": {
      "$id": "#Slider",
      "description": "Slide widget specific properties",
      "allOf": [{ "$ref": "#BaseSlideWidget" }]
    },
    "Speaker": {
      "$id": "#Speaker",
      "description": "Speaker(sink) widget specific properties",
      "allOf": [{ "$ref": "#BaseSlideWidget" }, { "$ref": "#UtilPulseAudio" }]
    },
    "Microphone": {
      "$id": "#Microphone",
      "description": "Microphone(source) widget specific properties",
      "allOf": [
        { "$ref": "#BaseSlideWidget" },
        {
          "$ref": "#UtilPulseAudio"
        }
      ]
    },
    "Backlight": {
      "$id": "#Backlight",
      "description": "Monitor Brightness widget specific properties",
      "allOf": [
        { "$ref": "#BaseSlideWidget" },
        {
          "properties": {
            "device_name": {
              "description": "remove this key to use default. monitor name, you can find it under `/sys/class/backlight.\nExample: amdgpu-bl2",
              "type": "string"
            },
            "redraw_only_on_change": {
              "description": "redraw only when monitor brightness change",
              "type": "boolean"
            }
          }
        }
      ]
    },

    "BoxOutlookWindow": {
      "$id": "#BoxOutlookWindow",
      "description": "Box Outlook `Window`",
      "properties": {
        "type": {
          "type": "string",
          "const": "window"
        },
        "margins": {
          "type": "array",
          "description": "left, top, right, bottom",
          "prefixItems": [
            { "type": "number" },
            { "type": "number" },
            { "type": "number" },
            { "type": "number" }
          ]
        },
        "color": {
          "$ref": "#UtilColor"
        },
        "border_radius": {
          "type": "number",
          "minimum": 1
        },
        "border_width": {
          "type": "number",
          "minimum": 1
        }
      }
    },
    "Box": {
      "$id": "#Box",
      "description": "Box widgets with grid layout, only support limited widgets",
      "properties": {
        "widgets": {
          "type": "array",
          "items": {
            "properties": {
              "index": {
                "type": "array",
                "description": "index of the widget's position in the grid",
                "prefixItems": [{ "type": "number" }, { "type": "number" }]
              },
              "widget": {
                "description": "widget type, only Ring supported for now",
                "$ref": "#AllWidgets"
              }
            }
          }
        },
        "gap": {
          "description": "gap between each widget",
          "type": "number",
          "minimum": 0
        },
        "frame_rate": {
          "$ref": "#UtilCommon/frame_rate"
        },
        "extra_trigger_size": {
          "$ref": "#UtilCommon/extra_trigger_size"
        },
        "transition_duration": {
          "$ref": "#UtilCommon/transition_duration"
        },
        "outloook": {
          "oneOf": [{ "$ref": "#BoxOutlookWindow" }]
        }
      }
    },
    "Ring": {
      "$id": "#Ring",
      "properties": {
        "radius": {
          "description": "radius of the ring",
          "type": "number",
          "default": 13
        },
        "ring_width": {
          "description": "ring width, should be less than radius",
          "type": "number",
          "default": 5
        },
        "bg_color": {
          "description": "progress uncovered area color",
          "$ref": "#UtilColor",
          "default": "#9F9F9F"
        },
        "fg_color": {
          "description": "progress area color",
          "$ref": "#UtilColor",
          "default": "#F1FA8C"
        },

        "frame_rate": {
          "$ref": "#UtilCommon/frame_rate"
        },
        "transition_duration": {
          "$ref": "#UtilCommon/transition_duration"
        },
        "prefix": {
          "description": "Text on the left side of the ring, default empty",
          "type": "string"
        },
        "font-family": {
          "description": "Font family of all text within ring widget, use default by not include this key",
          "type": "string"
        },
        "preset": {
          "description": "preset update function of the ring",
          "oneOf": [
            {
              "type": "string",
              "enum": ["ram", "swap", "cpu", "battery", "disk"]
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "ram"
                }
              }
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "swap"
                }
              }
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "cpu"
                }
              }
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "disk"
                },
                "partition": {
                  "description": "disk partition to monitor, default `/`",
                  "type": "string",
                  "default": "/"
                }
              }
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "battery"
                }
              }
            },
            {
              "properties": {
                "type": { "type": "string", "const": "custom" },
                "update_with_interval_ms": {
                  "description": "update progress with command given milliseconds\nProgress must be between 0 and 1.\n You can disable template by not providing text after\"\\n\"\nExample: [1000, \"printf \"0.2333\\n23.33%\"]",
                  "type": "array",
                  "default": [
                    1000,
                    "a=0.233 && printf \"$a\\n%.2f%%\" $(bc <<< \"scale=2; $a*100\")"
                  ],
                  "prefixItems": [
                    { "type": "integer", "minimum": 1 },
                    { "type": "string" }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "HyprlandWorkspace": {
      "$id": "#HyprlandWorkspace",
      "properties": {
        "thickness": {
          "description": "Equivalent to the old width, thickness of the hyprland workspace bar.",
          "$ref": "#UtilNumOrPercentage"
        },
        "length": {
          "description": "Equivalent to the old height, length of the hyprland workspace bar.",
          "$ref": "#UtilNumOrPercentage"
        },
        "gap": {
          "description": "Gap between each hyprland workspace.",
          "type": "integer",
          "default": 5
        },
        "active_increase": {
          "description": "How much length should one workspace increase when it's active.\n[0-1]",
          "type": "number",
          "default": 0.5
        },
        "workspace_transition_duration": {
          "description": "Animation time of active_increase switching between workspaces.",
          "type": "integer",
          "default": 300
        },
        "backlight": {
          "$ref": "#UtilColor",
          "default": ""
        },
        "deactive_color": {
          "$ref": "#UtilColor",
          "default": "#003049"
        },
        "active_color": {
          "$ref": "#UtilColor",
          "default": "#669bbc"
        },
        "hover_color": {
          "$ref": "#UtilColor",
          "default": ""
        },
        "frame_rate": {
          "$ref": "#UtilCommon/frame_rate"
        },
        "extra_trigger_size": {
          "$ref": "#UtilCommon/extra_trigger_size"
        },
        "transition_duration": {
          "$ref": "#UtilCommon/transition_duration"
        }
      }
    },
    "Text": {
      "$id": "#Text",
      "properties": {
        "fg_color": {
          "description": "progress area color",
          "$ref": "#UtilColor",
          "default": "#000000"
        },
        "font-family": {
          "description": "Font family of all text within ring widget, use default by not include this key",
          "type": "string"
        },
        "font-size": {
          "description": "Font size, default 12",
          "type": "integer",
          "default": 12
        },
        "preset": {
          "description": "text preset, avaibable: `time`, `custom`",
          "oneOf": [
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "time"
                },
                "format": {
                  "description": "time format, optional, please refer to [https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDateTime.html#method.format]",
                  "type": "string",
                  "default": "%Y-%m-%d %H:%M:%S"
                },
                "time_zone": {
                  "type": "string",
                  "description": "time zone, optional, please refer to [https://docs.rs/chrono-tz/0.9.0/chrono_tz/enum.Tz.html]\ndefault local"
                }
              }
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "const": "custom"
                },
                "update_with_interval_ms": {
                  "description": "update text with command given milliseconds",
                  "type": "array",
                  "default": [1000, "echo -n example_text"],
                  "prefixItems": [
                    { "type": "integer", "minimum": 1 },
                    { "type": "string" }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
}
