{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "numOrPercentage": {
      "anyOf": [{ "type": "number", "minimum": 0 }, { "type": "string" }]
    },
    "SlideWidget": {
      "type": "object",
      "description": "Slide widget specific properties",
      "required": ["width", "height"],
      "properties": {
        "type": {
          "description": "button widget type",
          "type": "string",
          "const": "slide"
        },
        "width": {
          "description": "width of the Slide widget. Can be either a number or a percentage.\nExample: 15",
          "$ref": "#/definitions/numOrPercentage"
        },
        "height": {
          "description": "height of the Slide widget. Can be either a number or a percentage.\nExample: \"25%\"",
          "$ref": "#/definitions/numOrPercentage"
        },
        "transition_duration": {
          "description": "button show/hide in `transition_duration` ms.\n Default 100ms",
          "type": "integer",
          "minimum": 0
        },
        "frame_rate": {
          "description": "button frame rate.\nDefault 30",
          "type": "integer",
          "minimum": 1
        },
        "extra_trigger_size": {
          "description": "transparent extra trigger area, must > 0 or else the button will not be triggered.\nDefault 5",
          "$ref": "#/definitions/numOrPercentage"
        },
        "bg_color": {
          "description": "background color of the widget: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205\nDefault `#7B98FF`",
          "type": "string"
        },
        "fg_color": {
          "description": "foreground color of the widget: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205\nDefault `#7B98FF`",
          "type": "string"
        },
        "border_color": {
          "description": "border color of the widget: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205\nDefault `#7B98FF`",
          "type": "string"
        },
        "text_color": {
          "description": "text color of the widget: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205\nDefault `#7B98FF`",
          "type": "string"
        },
        "preview_size": {
          "description": "how much area should the widget reveal when hidden\nDefault 3",
          "type": "number"
        },
        "progress_direction": {
          "description": "progress bar left/down -> right/up : Forward/Backward\nDefault Forward",
          "type": "string",
          "const": ["Forward", "Backward"]
        },
        "on_change": {
          "description": "command to execute, replace '{progress}' with the progress from 0-1",
          "type": "string"
        },
        "is_text_position_start": {
          "description": "which side percentage info at, start or end\nDefault true",
          "type": "boolean"
        }
      }
    },
    "BtnWidget": {
      "type": "object",
      "description": "Button widget specific properties",
      "required": ["width", "height"],
      "properties": {
        "type": {
          "description": "button widget type",
          "type": "string",
          "const": "btn"
        },
        "width": {
          "description": "width of the button. Can be either a number or a percentage.\nExample: 15",
          "$ref": "#/definitions/numOrPercentage"
        },
        "height": {
          "description": "height of the button. Can be either a number or a percentage.\nExample: \"25%\"",
          "$ref": "#/definitions/numOrPercentage"
        },
        "color": {
          "description": "main color of the button: pattern: `#rgb`/`#rrggbb`/`#rrrgggbbb`/`rgb(r, g, b)`/`rgba(r, g, b, a)`.\nFor additional notes, please refer to: https://gtk-rs.org/gtk4-rs/stable/latest/docs/src/gdk4/rgba.rs.html#205\nDefault `#7B98FF`",
          "type": "string"
        },
        "transition_duration": {
          "description": "button show/hide in `transition_duration` ms.\n Default 100ms",
          "type": "integer",
          "minimum": 0
        },
        "frame_rate": {
          "description": "button frame rate.\nDefault 30",
          "type": "integer",
          "minimum": 1
        },
        "extra_trigger_size": {
          "description": "transparent extra trigger area, must > 0 or else the button will not be triggered.\nDefault 5",
          "$ref": "#/definitions/numOrPercentage"
        },
        "event_map": {
          "description": "array of tuples(int, string), int refers for the mouse button id.\n if you don't know what id your extra mouse button is, please run with `way-edges [group_name] --mouse-debug`: example [[1, \"kitty #open up kitty console\"],]",
          "type": "array",
          "items": {
            "type": "array",
            "prefixItems": [
              { "type": "integer", "minimum": 1 },
              { "type": "string" }
            ]
          }
        }
      }
    }
  },
  "title": "way-edges config",
  "description": "A configuration for way-edges",
  "type": "object",
  "properties": {
    "groups": {
      "description": "Groups of buttons. you can activate each group by `way-edges [group_name]`.\nDefault empty array",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group, can be empty if exist only one group.\nDefault empty string",
            "type": "string"
          },
          "widgets": {
            "description": "Button items: available params:\nedge | position | layer | width | height | margin | monitor_id | monitor_name | widget",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "edge": {
                  "type": "string",
                  "description": "edge of the screen: top/bottom/left/right.\nDefault `left`",
                  "enum": ["top", "bottom", "left", "right"]
                },
                "position": {
                  "type": "string",
                  "description": "position of the edge: top/bottom; left/right; or leave empty string for center.\nDefault `center`",
                  "enum": ["", "top", "bottom", "left", "right", "center"]
                },
                "layer": {
                  "type": "string",
                  "description": "layer of the screen: background/bottom/top/overlay.\nDefault `top`",
                  "enum": ["top", "bottom", "background", "overlay"]
                },
                "margin": {
                  "description": "margin of the button, relative to the `position`.\nDefault all 0.",
                  "type": "object",
                  "properties": {
                    "top": {
                      "description": "top margin of the button\nDefault 0",
                      "$ref": "#/definitions/numOrPercentage"
                    },
                    "bottom": {
                      "description": "bottom margin of the button\nDefault 0",
                      "$ref": "#/definitions/numOrPercentage"
                    },
                    "left": {
                      "description": "left margin of the button\nDefault 0",
                      "$ref": "#/definitions/numOrPercentage"
                    },
                    "right": {
                      "description": "right margin of the button\nDefault 0",
                      "$ref": "#/definitions/numOrPercentage"
                    }
                  }
                },
                "monitor_id": {
                  "description": "Which monitor to show the button, ignored when given `monitor_name`.\nDefault 0",
                  "type": "integer",
                  "minimum": 0
                },
                "monitor_name": {
                  "description": "Which monitor to show the button.\nDefault empty string",
                  "type": "string"
                },
                "widget": {
                  "description": "Select one widget type",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/BtnWidget"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
